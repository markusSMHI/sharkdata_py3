#!/usr/bin/env python
# -*- coding:utf-8 -*-
#
# Copyright (c) 2013-2016 SMHI, Swedish Meteorological and Hydrological Institute 
# License: MIT License (see LICENSE.txt or http://opensource.org/licenses/mit).

from django.db import models

class CommandLog(models.Model):
    """ Database table definition for logging of command executions. """
    #
#     # "id" is generated by default by Django.
#     command_name = models.CharField(max_length=255)
#     status = models.CharField(max_length=63)
#     started_datetime = models.DateTimeField(auto_now_add = True)
#     finished_datetime = models.DateTimeField(auto_now = True)
#     executed_by = models.CharField(max_length=255)
#     result_log = models.TextField()
#     debug_log = models.TextField()
# 
#     def __str__(self):
#         return str(self.started_datetime) + ' ' + \
#                self.command_name + ' ' + \
#                self.status
# 
# 
# def createLogRow(command = 'NOT-DEFINED', 
#                  status = 'RUNNING', 
#                  user = ''):
#     """ """
#     logrow = CommandLog(command_name = command,
#                   status = status,
#                   executed_by = user,
#                   result_log = '',
#                   debug_log = ''
#                   )
#     logrow.save()
#     addResultLog(logrow.id, 'Command: ' + command + '\r\n\r\n')
#     return logrow.id  
# 
# def changeLogRowStatus(row_id, status):  
#     """ """
#     logrow = None
#     try: 
#         logrow = CommandLog.objects.get(id = row_id)
#         logrow.status = status
#         logrow.save()
#         addResultLog(logrow.id, '\n- New status: ' + status + '\r\n\r\n')
#     except:
#         return
# 
# def addResultLog(row_id, result_log):
#     """ The result log is public to all users. """
#     logrow = None
#     try: 
#         logrow = CommandLog.objects.get(id = row_id)
#         logrow.result_log += result_log + '\n'
#         logrow.debug_log += result_log + '\n' # Also add to debug log.
#         logrow.save()
#     except:
#         return
